vars: {
  page-name: React App
  server-name: Express Server
  db-name: MongoDB
}

label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  }

  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

user: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

page: ${page-name}
server: ${server-name}
db: ${db-name} {
  width: 100
  height: 90
  shape: cylinder
}

user -> page.p: Press like or unlike button {class: text-black}
page.p -> server.like: Send PUT request to like or unlike {class: text-black}
server.like -> db.find: Search for targeted Post {class: text-black}

alt: {
  class: frame
  \[An error was thrown\]: {
    server.like <- db.find: Throw error {class: return arrow}
    page.p <- server.like: Return response with status code 500 {class: return arrow}
    user <- page.p: Show error message "error in likeUnlikePost..." {class: return arrow}
  }
  \[No error was thrown\]: {
    alt2: "alt" {
      class: frame
      \[Post not found\]: {
        server.like <- db.find: Return null {class: return arrow}
        page.p <- server.like: Return response with status code 400 {class: return arrow}
        user <- page.p: Show error message "Post not found" {class: return arrow}
      }
      else: {
        alt3: "alt" {
          class: frame
          server.like <- db.find: Return Post {class: return arrow}
          \[No error was thrown\]: {
            alt4: "alt" {
              class: frame
              \[targeted Post is not liked yet\]: {
                server.like -> db.update1: Add targeted User into\n current Post's likes list {class: text-black}
                server.like <- db.update1: Return response {class: return arrow}
              }
              \[targeted User is already followed\]: {
                server.like -> db.update3: Remove targeted User from\n current Post's likes list {class: text-black}
                server.like <- db.update3: Return response {class: return arrow}
              }
              page.p <- server.like: Return response with status code 200 {class: return arrow}
              user <- page.p: Show successful message {class: return arrow}
            }
          }
          \[An error was thrown\]: {
            page.p <- server.like: Return response with status code 500 {class: return arrow}
            user <- page.p: Show error message "error in followUnFollow user..." {class: return arrow}
          }
        }
      }
    }
  }
}
